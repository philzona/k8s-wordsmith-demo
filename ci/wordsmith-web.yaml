version: "1.0"
stages:
  - "clone"
  - "unit-test"
  - "build"
  - "integration-test"
  - "review"
  - "cleanup"
# hooks:
#   on_finish:
#     steps:
#       remove_helm:
#         image: "codefresh/kube-helm:3.2.0"
#         commands:
#           - "kubectl config use-context gke"
#           - "helm uninstall ${{NS}} -n ${{NS}}"
#       remove_namespace:
#         image: "codefresh/kubectl"
#         commands:
#           - "kubectl config use-context gke"
#           - "kubectl delete ns ${{NS}}"
        
steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "philzona/k8s-wordsmith-demo"
    revision: "${{CF_BRANCH}}"
    git: "github-cf"
    stage: "clone"

  test:
    title: "Unit test"
    type: "freestyle"
    image: "golang:1.14-alpine"
    working_directory: "${{clone}}/web"
    commands:
      - "gofmt dispatcher.go"
    stage: "unit-test"

  build:
    title: "Building Docker image"
    type: "build"
    image_name: "codefreshphil/wordsmith-web"
    working_directory: "${{clone}}/web"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"
    dockerfile: "Dockerfile"
    stage: "build"
    on_success:
      metadata:
        set:
          - ${{build.imageId}}:
            - build_passed: "true"
    on_fail:
      metadata:
        set:
          - ${{build.imageId}}:
            - build_passed: "false"
  
  create_env:
    title: "Creating dynamic environment"
    type: "freestyle"
    image: "codefresh/kubectl"
    commands:
      - export NS="integration-test-${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"
      - kubectl config use-context codefreshphil
      - kubectl create ns $NS
      - cf_export NS
    stage: "integration-test"
    
  deploy_for_testing:
    title: "Deploying to dynamic env"
    type: helm
    arguments:
      action: "install"
      kube_context: "codefreshphil"
      namespace: "${{NS}}"
      chart_name: "wordsmith"
      release_name: "${{NS}}"
      helm_version: 3.2.0
      custom_values:
        - 'web.image="codefreshphil/wordsmith-web:${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"'
    stage: "integration-test"
        
  test_connectivity:
    title: "Testing connectivity"
    type: "freestyle"
    image: "codefresh/kubectl"
    working_directory: "${{clone}}/test"
    commands:
      - kubectl config use-context codefreshphil
      - ./integration.sh
    stage: "integration-test"
    on_success:
      metadata:
        set:
          - ${{build.imageId}}:
            - integration_passed: "true"
    on_fail:
      metadata:
        set:
          - ${{build.imageId}}:
            - integration_passed: "false"
  
  wait_for_review:
    title: "Waiting for approval"
    type: "pending-approval"
    timeout:
      duration: 1
      finalState: "approved"
    stage: "review"
    
  uninstall_after_testing:
    title: "Uninstalling from dynamic env"
    type: "helm"
    arguments:
      action: "auth"
      kube_context: "codefreshphil"
      namespace: "${{NS}}"
      helm_version: 3.2.0
      commands:
        - "helm uninstall ${{NS}} -n ${{NS}}"
    stage: "cleanup"
  
  teardown_env:
      title: "Tearing down dynamic environment"
      type: "freestyle"
      image: "codefresh/kubectl"
      commands:
        - "kubectl config use-context codefreshphil"
        - "kubectl delete ns $NS"
      stage: "cleanup"